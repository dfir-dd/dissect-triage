# This is a basic workflow to help you get started with Actions

name: Build triage binary

env:
  PYOXIDIZER_VERSION: 0.24.0
  FILENAME: full-acquire

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  release:
    branches: [ main ]
    types: [published]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          submodules: true
          
      #- uses: GuillaumeFalourd/setup-windows10-sdk-action@v1.11
      
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.3
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Copy plugins list
        id: copy_plugin_list
        run: |
          copy _pluginlist.py ($env:GITHUB_WORKSPACE + "\\dissect.target\\dissect\\target\\plugins")
      
      - name: obtain pyoxidize
        uses: suisei-cn/actions-download-file@v1.3.0
        with:
          url: "https://github.com/indygreg/PyOxidizer/releases/download/pyoxidizer%2F0.24.0/pyoxidizer-${{ env.PYOXIDIZER_VERSION }}-x86_64-pc-windows-msvc.zip"
          target: ./
      
      - name: obtain resource hacker
        uses: suisei-cn/actions-download-file@v1.3.0
        with:
          url: "http://angusj.com/resourcehacker/resource_hacker.zip"
          target: ./
          
      - name: extract and run pyoxidize
        run: |
          7z e pyoxidizer-${{ env.PYOXIDIZER_VERSION }}-x86_64-pc-windows-msvc.zip          
          7z e resource_hacker.zip
          dir
          .\build.ps1 full-acquire
      
      - name: Display Artifacts
        id: display_artifacts
        run: |
          ls -R ${{ env.FILENAME }}

      - name: trust certificate
        run: |
          $cert_data = "${{ secrets.DFIR_DD_CERTIFICATE }}"
          $cert_password = "${{ secrets.CERT_PASSWORD }}"
          $temp_dir = $env:TMP
          $cert_path = "$temp_dir\jasa.windoze.p12"
          $bytes = [Convert]::FromBase64String($cert_data)
          [IO.File]::WriteAllBytes($cert_path, $bytes)
          $cert_secure_password = ConvertTo-SecureString $cert_password -AsPlainText -Force
          Import-PfxCertificate -Password $cert_secure_password -CertStoreLocation "Cert:\LocalMachine\Root" -FilePath "$cert_path"
        
      - name: Sign binary
        uses: lando/code-sign-action@v2
        with:
          file: ${{ env.FILENAME }}\${{ env.FILENAME }}.exe
          certificate-data: ${{ secrets.DFIR_DD_CERTIFICATE }}
          certificate-password: ${{ secrets.CERT_PASSWORD }}
      
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          directory: ${{ env.FILENAME }}
          filename: C:\\${{ env.FILENAME }}-${{ steps.get_release.outputs.tag_name }}.zip
          exclusions: '*.git* /*node_modules/* .editorconfig'

      #- name: move archive to here
      #  run: |
      #    move build/x86_64-pc-windows-msvc/release/install/${{ env.FILENAME }}-${{ steps.get_release.outputs.tag_name }}.zip .
          
      - name: Upload Release Asset
        id: upload-zipfile 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }} 
          asset_path: C:\\${{ env.FILENAME }}-${{ steps.get_release.outputs.tag_name }}.zip
          asset_name: ${{ env.FILENAME }}-${{ steps.get_release.outputs.tag_name }}.zip
          asset_content_type: application/zip
      
      - name: Calculate checksums
        run: sha256sum ${{ env.FILENAME }}-${{ steps.get_release.outputs.tag_name }}.zip >${{ env.FILENAME }}-${{ steps.get_release.outputs.tag_name }}.sha256sum

      - name: Upload checksum
        id: upload-hashfile
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }} 
          asset_path: ./${{ env.FILENAME }}-${{ steps.get_release.outputs.tag_name }}.sha256sum
          asset_name: ${{ env.FILENAME }}-${{ steps.get_release.outputs.tag_name }}.sha256sum
          asset_content_type: application/zip
